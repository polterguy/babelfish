
// Counts the number of translations in your backend according to the specified arguments.
.arguments
   operator:string
   id.like:string
   id.mt:string
   id.lt:string
   id.mteq:string
   id.lteq:string
   id.neq:string
   id.eq:string
   locale.like:string
   locale.mt:string
   locale.lt:string
   locale.mteq:string
   locale.lteq:string
   locale.neq:string
   locale.eq:string
   content.like:string
   content.mt:string
   content.lt:string
   content.mteq:string
   content.lteq:string
   content.neq:string
   content.eq:string
.description:Counts items from your translations table in your [generic|babelfish] database according to the specified arguments
.type:crud-count

// Making sure only authorised clients can invoke endpoint.
auth.ticket.verify:root, admin, translator

// Applying correct boolean operator according to arguments.
if
   exists:x:@.arguments/*/operator
   .lambda
      switch:x:@.arguments/*/operator
         case:and
         case:or
            set-name:x:../*/data.connect/*/data.read/*/where/*
               get-value:x:@.arguments/*/operator
         default
            throw:"Unsupported operator, only 'and' and 'or' supported"

// Connecting to database.
data.connect:[generic|babelfish]

   // Parametrising invocation.
   add:x:+/+/+
      get-nodes:x:@.arguments/*/operator
   remove-nodes:x:@.arguments/*/operator
   add:x:+/*/where/*
      get-nodes:x:@.arguments/*

   // Reading items from our database.
   data.read
      table:translations
      columns
         count(*)
            as:count
      where
         and
      limit:long:1

   // Returning results of above invocation to caller.
   return-nodes:x:@data.read/*/*
